import{_ as n,p as s,q as a,a1 as t}from"./framework-ea2a9e6e.js";const e={},o=t(`<h2 id="buffer" tabindex="-1"><a class="header-anchor" href="#buffer" aria-hidden="true">#</a> Buffer</h2><p>在<code>node</code>开发中随处可见<code>Buffer</code>的使用，所以对<code>Buffer</code>的理解是很有必要的，对你更深刻的了解<code>node</code>很有帮助</p><blockquote><p>在不了解Buffer的情况下，也不影响你使用 node.js</p></blockquote><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h2><p>在前端使用<code>JS</code>是不需要操作二进制数据，但在后端对大文件打开、写入等操作，需要处理二进制数据流</p><p><strong>Buffer</strong>是用于存放二进制数据的缓存区（内存），比如我们读取大文件时，一次载入内存会占用大量内存，这种情况可以使用<strong>Buffer</strong>将数据一块一块加入到<strong>Buffer</strong>内存中，然后再以流的形式一段一段传递，这样减少内存占用，加快数据读取处理</p><p>也可以把<strong>Buffer</strong>理解为你在看在线视频时的缓冲区数据</p><p>现实生活类似，京东咋爱各地建立的仓储点，这个仓储点就是<strong>Buffer</strong>,有了这个仓储点就不需要从商家源头运货了，京东不断地保证仓储点有货，这可以保证最快的把货送到客户手里。</p><h2 id="操作体验" tabindex="-1"><a class="header-anchor" href="#操作体验" aria-hidden="true">#</a> 操作体验</h2><ul><li><strong>Buffer</strong>是全局类不需要引用其他模块</li><li><strong>Buffer</strong>是内存数据和大家了解的数组一样，只不过存储的是二进制</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> buffer <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;nodejs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//&lt;Buffer 6e 6f 64 65 6a 73&gt;</span>

<span class="token comment">//返回的 JSON 表示形式，值为 unicode 码</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//{ type: &#39;Buffer&#39;, data: [ 110, 111, 100, 101, 106, 115 ] }</span>

<span class="token comment">//转换为字符串</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//nodejs</span>

<span class="token comment">//可以像数组一样，修改 Buffer 数据</span>
buffer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>定义Buffer 储存大小，超过大小的数据将被忽略</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//定义 Buffer 空间为4个字节</span>
<span class="token keyword">const</span> buffer <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
buffer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;nodejs&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 只能保存 node 4个字节数据</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//node</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),p=[o];function c(u,i){return s(),a("div",null,p)}const r=n(e,[["render",c],["__file","Buffer.html.vue"]]);export{r as default};
