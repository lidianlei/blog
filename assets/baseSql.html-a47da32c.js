import{_ as s,p as n,q as a,a1 as e}from"./framework-ea2a9e6e.js";const t={},p=e(`<h2 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作" aria-hidden="true">#</a> 基本操作</h2><h3 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h3><p><strong>常见的数量及分类</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1</span><span class="token punctuation">.</span>Mysql 数据库（目前使用最广泛、流行度最好的开源免费数据库；Community <span class="token operator">+</span> Enterprise）
<span class="token number">2</span><span class="token punctuation">.</span>Oracle 数据库（收费）
<span class="token number">3.</span><span class="token constant">SQL</span> Server 数据库 （收费）
<span class="token number">4</span><span class="token punctuation">.</span>Mongodb 数据库 （Community <span class="token operator">+</span> Enterprise）
其中 MySql、Oracle、<span class="token constant">SQL</span> Server 属于<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">传统型数据库（关系型数据库 或 SQL 数据库）</span><span class="token template-punctuation string">\`</span></span>
这三者的设计理念相同，用发比较类似
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Mysql 的基本使用</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1.</span>查询数据：select
<span class="token number">2.</span>插入数据库：insert into 
<span class="token number">3.</span>更新数据：update 
<span class="token number">4.</span>删除数据：<span class="token keyword">delete</span>
where 条件、 and 和 or 运算符、order by <span class="token function">排序、count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>函数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基本语句</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1.</span><span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> 表名称 <span class="token comment">//从指定的【表中】，查询出【所有的】数据， * 表示【所有列】</span>
<span class="token number">2.</span><span class="token constant">SELECT</span> 列名称 <span class="token constant">FROM</span> 表名称 <span class="token comment">// FROM 指定的【表中】 查询出指定 列名称的字段数据</span>
<span class="token comment">//注意 SQL 语句中的 关键字 对 大小写不敏感， SELECT 等于 select from=FROM</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>UPDATE</strong></p><div class="language-JS line-numbers-mode" data-ext="JS"><pre class="language-JS"><code>1.UPDATE 语句用于修改表中的数据
// 用 UPDATE 指定要更新哪个表中的数据 ，用 SET 指定列 队形的新值，用 WHERE 指定更新的条件
UPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值
//把 users 表中 id 为 7 的用户密码更新为 pass123
UPDATE users SET password=&#39;pass123&#39; WHERE id=7;
//把 users 表中 id 为 2 的用户密码和用户状态分别更新为 admin 和 1
UPDATE users SET password=&#39;admin&#39;,status=1 WHERE id=2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>DELETE</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1.</span><span class="token constant">DELETE</span> 语句用于删除表中的值
<span class="token comment">//从指定的表中，根据 Where 条件， 删除对应的数据行</span>
<span class="token constant">DELETE</span> <span class="token constant">FROM</span> 表名称 <span class="token constant">WHERE</span> 列名称<span class="token operator">=</span>值
<span class="token comment">//从 users 表中删除 id 为 4 的数据</span>
<span class="token constant">DELETE</span> <span class="token constant">FROM</span> users <span class="token constant">WHERE</span> id<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>WHERE</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1.</span><span class="token constant">WHERE</span> 语句用于<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">限定选择的标准</span><span class="token template-punctuation string">\`</span></span>。在<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SELECT、UPDATE、DELETE</span><span class="token template-punctuation string">\`</span></span>语句中，<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">皆可使用</span><span class="token template-punctuation string">\`</span></span><span class="token constant">WHERE</span>子句来限定选择的标准
<span class="token comment">//查询语句中的 WHERE 条件</span>
<span class="token constant">SELECT</span> 列名称 <span class="token constant">FROM</span> 表名称 <span class="token constant">WHERE</span> 列 运算符 值
<span class="token comment">//更新语句中的 WHERE 条件</span>
<span class="token constant">UPDATE</span> 表名称 <span class="token constant">SET</span> 列<span class="token operator">=</span>新值 <span class="token constant">WHERE</span> 列 运算符 值
<span class="token comment">//删除语句中的 WHERE 条件</span>
<span class="token constant">DELETE</span> <span class="token constant">FROM</span> 表名称 <span class="token constant">WHERE</span> 列 运算符 值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运算符</p><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt;</td><td>不等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>BETWEEN</td><td>在某个范围内</td></tr><tr><td>LIKE</td><td>搜索某种模式</td></tr></tbody></table><p><strong>注意：在某些版本中 SQL 中，操作符 &lt;&gt; 可以写为 !=</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//看看通过 WHERE 子句来限定 SELECT 的查询条件</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> users <span class="token constant">WHERE</span> status<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">//查询 id 大于 2 的所有用户</span>
<span class="token constant">SEKECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> user <span class="token constant">WHERE</span> id<span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token comment">//查询 username 不等于 admin 的所有用户</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> users <span class="token constant">WHERE</span> username <span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token string">&#39;admin&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>SQL 的 AND 和 OR 运算符</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1.</span><span class="token constant">AND</span> 和 <span class="token constant">OR</span> 可在<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">WHERE</span><span class="token template-punctuation string">\`</span></span>子语句中把两个或多个条件结合起来
<span class="token number">2.</span><span class="token constant">AND</span> 表示 <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">必须同时满足多个条件</span><span class="token template-punctuation string">\`</span></span>，相当于 Javascript 中的<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&amp;&amp;</span><span class="token template-punctuation string">\`</span></span>运算符，例如 <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">!=</span><span class="token number">10</span><span class="token operator">&amp;&amp;</span>a<span class="token operator">!=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">3.</span><span class="token constant">OR</span> 表示<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">只要满足任意一个条件即可</span><span class="token template-punctuation string">\`</span></span>，相当于 Javascript 中的<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">||</span><span class="token template-punctuation string">\`</span></span>运算符，例如 <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">!=</span><span class="token number">10</span><span class="token operator">||</span>a<span class="token operator">!=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AND运算符示例</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//使用 AND 来显示所有 \`status\`为0，并且 id 小于 3 的用户</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> users <span class="token constant">WHERE</span> status<span class="token operator">=</span><span class="token number">0</span> <span class="token constant">AND</span> id<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>OR 运算符示例</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//使用 OR 来显示所有 status 为1 或者 username 为 zs 的用户</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> users <span class="token constant">WHERE</span> status<span class="token operator">=</span><span class="token number">1</span> <span class="token constant">OR</span> username<span class="token operator">=</span><span class="token string">&#39;zs&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ORDER BY升序排序</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1.</span>对 users 表中的数据，按照<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">status</span><span class="token template-punctuation string">\`</span></span>字段进行升序排序
<span class="token comment">//注意：ORDER BY 默认进行升序排序，其中 ASC 关键字代表升序排序</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> users <span class="token constant">ORDER</span> <span class="token constant">BY</span> status<span class="token punctuation">;</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> users <span class="token constant">ORDER</span> <span class="token constant">BY</span> status <span class="token constant">ASC</span><span class="token punctuation">;</span><span class="token comment">//升序</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> users <span class="token constant">ORDER</span> <span class="token constant">BY</span> status <span class="token constant">DESC</span><span class="token punctuation">;</span><span class="token comment">//降序</span>

<span class="token number">2.</span><span class="token constant">ORDER</span> <span class="token constant">BY</span> 子句<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">多重排序</span><span class="token template-punctuation string">\`</span></span>
<span class="token comment">//对 users 表中的数据，先按照\`status\`字段进行\`降序排序\`，再按照\`username\`的\`字母顺序\`，进行\`升序排序\`</span>
<span class="token comment">//注意：DESC 代表降序排序</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> users <span class="token constant">ORDER</span> <span class="token constant">BY</span> status <span class="token constant">DESC</span><span class="token punctuation">,</span>username <span class="token constant">ASC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>SQL 的 COUNT(*)函数</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1.</span><span class="token constant">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 函数用于返回<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">查询结果的总数据条数</span><span class="token template-punctuation string">\`</span></span>
<span class="token constant">SELECT</span> <span class="token constant">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token constant">FROM</span> 表名称<span class="token punctuation">;</span>
<span class="token number">2.</span><span class="token constant">SQL</span> 的 <span class="token constant">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 函数
<span class="token comment">//使用 AS 为列设置别名</span>
如果希望给查询出来的列名称设置别名，可使用 <span class="token constant">AS</span> 关键字
<span class="token constant">SELECT</span> <span class="token constant">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token constant">AS</span> total <span class="token constant">FROM</span> user <span class="token constant">WHERE</span> status<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="链接服务器" tabindex="-1"><a class="header-anchor" href="#链接服务器" aria-hidden="true">#</a> 链接服务器</h2><h3 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明" aria-hidden="true">#</a> 参数说明</h3><p>在命令行链接<strong>mysql</strong>的参数</p><table><thead><tr><th>选项</th><th>说明</th><th>默认</th></tr></thead><tbody><tr><td>-u</td><td>账号</td><td>当前系统同名账号</td></tr><tr><td>-p</td><td>密码</td><td></td></tr><tr><td>-p</td><td>链接端口</td><td>3306</td></tr><tr><td>-h</td><td>主机地址</td><td>127.0.0.1</td></tr><tr><td>-e</td><td>执行<code>sql</code>指令</td><td></td></tr></tbody></table><h3 id="链接操作" tabindex="-1"><a class="header-anchor" href="#链接操作" aria-hidden="true">#</a> 链接操作</h3><p><strong>连接服务器</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p <span class="token operator">-</span>p3306 <span class="token operator">-</span>h <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span>
<span class="token comment">//链接本地数据库是可以使用默认值</span>
mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>-e</code>执行<code>SQL</code>语句</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>proot <span class="token operator">-</span>e<span class="token string">&#39;show database&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>退出连接</strong></p><p>命令行下执行 exit 可通出当前连接</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>exit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="执行与取消" tabindex="-1"><a class="header-anchor" href="#执行与取消" aria-hidden="true">#</a> 执行与取消</h3><p>每条 SQL 指令以<code>;</code>结束，按回车后执行该条语句</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>show database<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>放弃语句</strong></p><p>在 SQL 后使用<code>\\c</code>表示取消本条 SQL，后面不需要写<code>;</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>show database \\c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="数据库管理" tabindex="-1"><a class="header-anchor" href="#数据库管理" aria-hidden="true">#</a> 数据库管理</h2><h3 id="常用指令" tabindex="-1"><a class="header-anchor" href="#常用指令" aria-hidden="true">#</a> 常用指令</h3><p><strong>数据库列表</strong></p><p>使用以下命令可以得到当前数据库所有数据库</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>show databases<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>创建新库</strong></p><p>创建数据库<code>nodejs</code>并设置字符集为<code>utf8</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">CREATE</span> <span class="token constant">DATABASE</span> nodejs <span class="token constant">CHARSET</span> utf8<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>查看数据库</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>show create database nodejs<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>删除数据库</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>drop database nodejs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为了防止删除不存在的数据库报错</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>drop database <span class="token keyword">if</span> exists nodejs<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>选择数据库</strong></p><p>数据库主要是对表操作，选择数据库后可以省掉每次指定数据库的麻烦</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>use nodejs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="导入语句" tabindex="-1"><a class="header-anchor" href="#导入语句" aria-hidden="true">#</a> 导入语句</h3><p>有时需要把外部的 SQL 文件导入到服务器中，图像化的数据库管理软件都支持导入。</p><p><strong>创建文件</strong></p><p>创建<code>test.sql</code>文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>create database text chatset utf8<span class="token punctuation">;</span>
<span class="token constant">SHOW</span> <span class="token constant">DATABASES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>外部导入</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p <span class="token operator">&lt;</span> test<span class="token punctuation">.</span>sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>连接后导入</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p
<span class="token operator">&gt;</span>source text<span class="token punctuation">.</span>sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据表管理" tabindex="-1"><a class="header-anchor" href="#数据表管理" aria-hidden="true">#</a> 数据表管理</h2><p>可以把数据库理解为文件夹，数据表理解为文件，数据表是真正存储数据的地方</p><h3 id="基本操作-1" tabindex="-1"><a class="header-anchor" href="#基本操作-1" aria-hidden="true">#</a> 基本操作</h3><p><strong>创建表数据</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>create table <span class="token keyword">class</span> <span class="token punctuation">(</span>
	id int primary keu <span class="token constant">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    cname <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
    description <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
charset utf8<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上语句创建表<code>class</code>字段说明如下</p><ul><li>字段 id 为主键自增</li><li>字段 cname 为字符串类型 varchar 并不允许为 null</li><li>字段 description 为可为 null 字符串</li><li>字符集为 utf8，如果不设置将继承数据库字符集</li></ul><h3 id="复制数据" tabindex="-1"><a class="header-anchor" href="#复制数据" aria-hidden="true">#</a> 复制数据</h3><p>根据已经存在的表结构创建新表</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>create table nodejs like <span class="token keyword">class</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复制其他表的数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>insert into nodejs select <span class="token operator">*</span> from <span class="token keyword">class</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>只复制批定字段</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>insert into <span class="token function">nodejs</span> <span class="token punctuation">(</span>cname<span class="token punctuation">)</span> select cname from <span class="token keyword">class</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复制表时同时复制数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>crate table node select <span class="token operator">*</span> from <span class="token keyword">class</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>只复制指定字段，并为不同名字段起别名</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>create table <span class="token function">node</span> <span class="token punctuation">(</span>id int primary key <span class="token constant">AUTO_INCREMENT</span><span class="token punctuation">,</span>name <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span> select id<span class="token punctuation">,</span>cname <span class="token keyword">as</span> name from <span class="token keyword">class</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除表数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">DROP</span> <span class="token constant">TEMPORARY</span> <span class="token constant">TABLE</span> <span class="token constant">IF</span> <span class="token constant">EXISTS</span> node<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="临时表" tabindex="-1"><a class="header-anchor" href="#临时表" aria-hidden="true">#</a> 临时表</h3><p>临时表适用于储存临时数据表，会在数据库连接中断时自动删除</p><ul><li>可以与普通表同名，优先级高于普通表</li><li>链接终端时自动删除</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>create <span class="token constant">TEMPORARY</span> <span class="token constant">TABLE</span> class_name <span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> <span class="token keyword">class</span><span class="token punctuation">;</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> class_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>删除临时表</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">DROP</span> <span class="token constant">TEMPORARY</span> <span class="token constant">TABLE</span> <span class="token constant">IF</span> <span class="token constant">EXISTS</span> class_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据" aria-hidden="true">#</a> 查询数据</h2><h3 id="测试表" tabindex="-1"><a class="header-anchor" href="#测试表" aria-hidden="true">#</a> 测试表</h3><p>为了进行查询示例操作我们创建一下表</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">CREATE</span> <span class="token constant">TABLE</span> <span class="token function">stu</span> <span class="token punctuation">(</span>id int <span class="token constant">PRIMARY</span> <span class="token constant">KEY</span> <span class="token constant">AUTO_INCREMENT</span><span class="token punctuation">,</span>sname <span class="token function">char</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>class_id int <span class="token keyword">default</span> <span class="token keyword">null</span><span class="token punctuation">,</span>age smallint <span class="token keyword">default</span> <span class="token keyword">null</span><span class="token punctuation">)</span>

<span class="token constant">INSERT</span> <span class="token constant">INTO</span> <span class="token function">stu</span><span class="token punctuation">(</span>sname<span class="token punctuation">,</span>class_id<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token constant">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;小明&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;小刘&#39;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字段处理" tabindex="-1"><a class="header-anchor" href="#字段处理" aria-hidden="true">#</a> 字段处理</h3><p>查询所有字估数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select <span class="token operator">*</span> from <span class="token keyword">class</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询指定字段数据并排序字符</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select description<span class="token punctuation">,</span>cname from <span class="token keyword">class</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="条件筛选" tabindex="-1"><a class="header-anchor" href="#条件筛选" aria-hidden="true">#</a> 条件筛选</h3><p>根据条件查询</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select <span class="token operator">*</span> from <span class="token keyword">class</span> <span class="token class-name">where</span> cname <span class="token operator">=</span> <span class="token string">&#39;node&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询包含关键词的数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select <span class="token operator">*</span> from <span class="token keyword">class</span> <span class="token class-name">where</span> description like <span class="token string">&#39;%p%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>合并列返回新列查询结果</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">SELECT</span> <span class="token constant">CONCAT</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&#39;class_info&#39;</span> <span class="token constant">FROM</span> 表名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>指定多条件查询</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> <span class="token constant">CLASS</span> <span class="token constant">WHERE</span> id<span class="token operator">&gt;</span><span class="token number">1</span> and cname <span class="token operator">=</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查找一班或行张的同学</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> stu where class_id<span class="token operator">=</span><span class="token number">1</span> or sname like <span class="token string">&#39;张%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>介绍中不包含 php 的班级</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> <span class="token keyword">class</span> <span class="token class-name">WHERE</span> description <span class="token constant">NOT</span> <span class="token constant">LIKE</span> <span class="token string">&#39;%php%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询学生所在班级编号，并去掉重复值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">SELECT</span> <span class="token constant">DISTINCE</span> class_id from stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询不在 30~35岁间的学生</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> stu <span class="token constant">WHERE</span> age <span class="token constant">NOT</span> <span class="token constant">BETWEEN</span> <span class="token number">30</span> <span class="token constant">AND</span> <span class="token number">35</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查找2、3班的所有同学</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> stu <span class="token constant">WHERE</span> class_id <span class="token constant">IN</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查找除了1、3班的同学</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select <span class="token operator">*</span> from stu where class_id <span class="token constant">NOT</span> <span class="token constant">IN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="null" tabindex="-1"><a class="header-anchor" href="#null" aria-hidden="true">#</a> NULL</h3><p>查询没有分配班级的学生姓名</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select sname from stu where class_id is <span class="token keyword">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询已经分配班级的学生信息</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select <span class="token operator">*</span> from stu where class_id is not <span class="token keyword">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询结果中对没分配班级的学生显示未分配</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select sname<span class="token punctuation">,</span><span class="token keyword">if</span><span class="token punctuation">(</span>class_id is <span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">&#39;未分配&#39;</span>，class_id<span class="token punctuation">)</span> from stu<span class="token punctuation">;</span>
<span class="token comment">//也可以使用 IFNULL 函数简化操作</span>
select sname<span class="token punctuation">,</span><span class="token function">ifnull</span><span class="token punctuation">(</span>class_id<span class="token punctuation">,</span><span class="token string">&#39;未分配&#39;</span><span class="token punctuation">)</span> from stu<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="排序结果" tabindex="-1"><a class="header-anchor" href="#排序结果" aria-hidden="true">#</a> 排序结果</h3><p>按学生年龄从大到小排序</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select <span class="token operator">*</span> from stu order by age desc<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>班级从大到小排序，相同班级的同学年龄从小到大排序</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select <span class="token operator">*</span> from stu order by class_id <span class="token constant">DESC</span><span class="token punctuation">,</span>age <span class="token constant">ASC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>随机获取一名同学</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select <span class="token operator">*</span> from stu order by <span class="token constant">RAND</span><span class="token punctuation">(</span><span class="token punctuation">)</span> limit <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后报名的同学</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>select <span class="token operator">*</span> from stu order by desc limit <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第二和第三报名的同学</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// limit 是从零开始的</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> stu <span class="token constant">ORDER</span> <span class="token constant">BY</span> id <span class="token constant">ASC</span> limit <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查找 2 班 年龄最小的同学</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">SELECT</span> <span class="token operator">*</span> <span class="token constant">FROM</span> stu <span class="token constant">WHERE</span> class_id<span class="token operator">=</span><span class="token number">2</span> and age is not <span class="token keyword">null</span> order by age asc limit <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">//以上代码不正确，因为可能有同年龄的同学，所以可以使用子查询操作</span>
select <span class="token operator">*</span> from stu where age <span class="token operator">=</span> <span class="token punctuation">(</span>
	select age from stu where class_id<span class="token operator">=</span><span class="token number">2</span> and age is not <span class="token keyword">null</span> order by age asc limit <span class="token number">1</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他操作" tabindex="-1"><a class="header-anchor" href="#其他操作" aria-hidden="true">#</a> 其他操作</h2><h3 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据" aria-hidden="true">#</a> 更新数据</h3><p>将班级为2 的学生改为班级 3</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">UPDATE</span> stu <span class="token constant">SET</span> class_id<span class="token operator">=</span><span class="token number">3</span> <span class="token constant">WHERE</span> class_id <span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2 班年龄小于20 岁的同学年龄设置为null</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">UPDATE</span> stu <span class="token constant">SET</span> age <span class="token operator">=</span> <span class="token keyword">null</span> where age <span class="token operator">=</span><span class="token number">20</span> and class_id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>将年龄小于20的同学年龄加10岁</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">UPDATE</span> stu <span class="token constant">SET</span> age<span class="token operator">=</span>age<span class="token operator">+</span><span class="token number">10</span> <span class="token constant">WHERE</span> age<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除记录" tabindex="-1"><a class="header-anchor" href="#删除记录" aria-hidden="true">#</a> 删除记录</h3><p><strong>删除所有年龄小于20 的同学</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">DELETE</span> <span class="token constant">FROM</span> stu <span class="token constant">WHERE</span> age<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>删除所有年龄小在30并没有班级的同学</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">DELETE</span> <span class="token constant">FROM</span> stu <span class="token constant">WHERE</span> class_id <span class="token constant">IS</span> <span class="token constant">NULL</span> <span class="token constant">AND</span> age <span class="token operator">&lt;</span><span class="token number">30</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加数据" tabindex="-1"><a class="header-anchor" href="#添加数据" aria-hidden="true">#</a> 添加数据</h3><p><strong>添加一条记录</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">INSERT</span> <span class="token constant">INTO</span> stu <span class="token constant">SET</span> sname <span class="token operator">=</span> <span class="token string">&#39;node,age=20,class_id=1&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>添加多条记录</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">INSERT</span> <span class="token constant">INTO</span> <span class="token function">stu</span> <span class="token punctuation">(</span>sname<span class="token punctuation">,</span>class_id<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token constant">VALUES</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,166),c=[p];function o(l,i){return n(),a("div",null,c)}const d=s(t,[["render",o],["__file","baseSql.html.vue"]]);export{d as default};
