import{_ as t,M as p,p as i,q as c,R as n,t as s,N as e,a1 as o}from"./framework-ea2a9e6e.js";const r={},l=n("h1",{id:"安装配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装配置","aria-hidden":"true"},"#"),s(" 安装配置")],-1),d=n("h2",{id:"基本知识",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#基本知识","aria-hidden":"true"},"#"),s(" 基本知识")],-1),u=n("p",null,"各个浏览器厂商会开发解析Javascript的引擎如google chrome、Apple safari。因为不同厂商的引擎对ecmascript的解析程序不同，所以有些功能可能在有的浏览器有效，但在其他的浏览器无效。",-1),v=n("p",null,"比较著名的引擎是chrome 的v8，它是由c++编写的，而且它有个特点可以内置到其他C++程序中，这就为node.js的实现提供的基础。所以可以把nodejs简单来理解为使用v8引擎可以解析javascript语法，同时也可以调用c++功能进行文件操作，网络通信等功能。",-1),k=n("p",null,[n("strong",null,"Nodejs vs Browser")],-1),m=n("li",null,"nodejs是开源、跨平台的javascript运行时环境，它是运行时，不时语言或框架，是在浏览器之外的Javascript使用",-1),h=n("li",null,"nodejs可以使用javascript调用c++，实现计算底层操作",-1),g={href:"https://github.com/nodejs/node/tree/main/deps/v8",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/nodejs/node/tree/main/deps/uv",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/nodejs/node/tree/main/src",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/nodejs/node/tree/main/lib",target:"_blank",rel:"noopener noreferrer"},_=n("li",null,"nodejs 没有基于浏览器的javascript的DOM、BOM等概念这与但是拥有文件系统操作功能",-1),f=n("li",null,"nodejs 我们可以随意选择版本，但浏览器的javascript运行在众多用户电脑中，所以版本不是由我们决定的",-1),y=o(`<p>安装后执行以下命令，查看安装的nodejs版本</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>node <span class="token operator">-</span>v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编写index.js内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后在命令行执行该文件，好可以查看到当前目录的 <code>node.js</code>执行的结果</p><h2 id="类型支持" tabindex="-1"><a class="header-anchor" href="#类型支持" aria-hidden="true">#</a> 类型支持</h2><p>开发中经常使用 <code>typescript</code>进行开发，所以我们来配置<code>Node</code>的<code>typescript</code>开发环境</p><h3 id="安装软件" tabindex="-1"><a class="header-anchor" href="#安装软件" aria-hidden="true">#</a> 安装软件</h3>`,8),x={href:"https://github.com/TypeStrong/ts-node#overview",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/remy/nodemon",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.tslang.cn/index.html#download-links",target:"_blank",rel:"noopener noreferrer"},S=o(`<p>执行以下命令进行安装</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pnpm add <span class="token operator">-</span>g add ts<span class="token operator">-</span>node nodemon typescript @types<span class="token operator">/</span>node
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="文件结构" tabindex="-1"><a class="header-anchor" href="#文件结构" aria-hidden="true">#</a> 文件结构</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>├── <span class="token keyword">package</span><span class="token punctuation">.</span>json
├── pnpm<span class="token operator">-</span>lock<span class="token punctuation">.</span>yaml
└── src
    ├── http<span class="token punctuation">.</span>ts
    └── index<span class="token punctuation">.</span>ts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="package-json" tabindex="-1"><a class="header-anchor" href="#package-json" aria-hidden="true">#</a> package.json</h3><p>创建 <code>package.json</code>文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pnpm init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>package.json</code>文件内容为</p><ul><li>将主文件修改为 <strong>index.ts</strong></li><li>因为会自动调用 <strong>ts-node</strong> 命令，所以dev 命令可以简写为 <strong>dev:nodemon</strong></li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.ts&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;@types/node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^18.7.8&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;ts-node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^10.9.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;typescript&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.7.4&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tsconfig-json" tabindex="-1"><a class="header-anchor" href="#tsconfig-json" aria-hidden="true">#</a> tsconfig.json</h3><p>然后创建 tsconfig.json 文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>tsc <span class="token operator">--</span>init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置项内容如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">//ts编译为的ES的版本</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ESNext&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//使用的模块规范</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;NodeNext&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//兼容common.js模块到ESM</span>
    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">//开启严格类型校验</span>
    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token comment">//允许导入扩展名为.json的模块</span>
    <span class="token property">&quot;resolveJsonModule&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//我们代码位置</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./**/*&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行测试" tabindex="-1"><a class="header-anchor" href="#运行测试" aria-hidden="true">#</a> 运行测试</h3><p>下面我们来运行项目，项目的主文件是 <strong>src/index.ts</strong>，文件内容如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> os <span class="token keyword">from</span> <span class="token string">&#39;os&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着执行命令来运行项目</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pnpm run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,20);function E(M,B){const a=p("ExternalLinkIcon");return i(),c("div",null,[l,d,u,v,k,n("ul",null,[m,h,n("li",null,[s("nodejs运行时包含 "),n("a",g,[s("v8引擎 (opens new window)"),e(a)]),s("（解析javascript）、"),n("a",b,[s("libuv (opens new window)"),e(a)]),s("(进行计算机文件、网络等底层操作) 等等。通过查看"),n("a",j,[s("nodejs源码 (opens new window)"),e(a)]),s("，我们会知道nodejs使用c++进行文件或网络操作")]),n("li",null,[s("nodejs使用libuv库，让开发者使用"),n("a",q,[s("javascript (opens new window)"),e(a)]),s("调用c++程序")]),_,f]),y,n("ul",null,[n("li",null,[n("a",x,[s("ts-node (opens new window)"),e(a)]),s("使您能够直接在 Node 上执行 TypeScript.js而无需预编译")]),n("li",null,[n("a",w,[s("nodemon (opens new window)"),e(a)]),s("nodemon 监视源中的任何更改并自动重新启动服务器，非常适合开发")]),n("li",null,[n("a",N,[s("typescript (opens new window)"),e(a)]),s("安装typescript")])]),S])}const V=t(r,[["render",E],["__file","config.html.vue"]]);export{V as default};
