import{_ as o,M as p,p as l,q as c,R as n,t as s,N as t,a1 as e}from"./framework-ea2a9e6e.js";const i={},r=e(`<h1 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas" aria-hidden="true">#</a> Canvas</h1><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识" aria-hidden="true">#</a> 基础知识</h2><p>获取元素</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后，创建 context 对象</p><p><em>getContext(&quot;2d&quot;) 对象是内建的 HTML5 对象，拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置fillStyle属性可以是CSS颜色，渐变，或图案。fillStyle 默认设置是#000000（黑色）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>fillRect(<em>x,y,width,height</em>) 方法定义了矩形当前的填充方式</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">175</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="颜色、样式和阴影" tabindex="-1"><a class="header-anchor" href="#颜色、样式和阴影" aria-hidden="true">#</a> 颜色、样式和阴影</h3>`,12),u=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"描述")])],-1),d={style:{"text-align":"left"}},k={href:"https://www.runoob.com/tags/canvas-fillstyle.html",target:"_blank",rel:"noopener noreferrer"},h=n("td",{style:{"text-align":"left"}},"设置或返回用于填充绘画的颜色、渐变或模式",-1),m={style:{"text-align":"left"}},v={href:"https://www.runoob.com/tags/canvas-strokestyle.html",target:"_blank",rel:"noopener noreferrer"},g=n("td",{style:{"text-align":"left"}},"设置或返回用于笔触的颜色、渐变或模式",-1),b={style:{"text-align":"left"}},f={href:"https://www.runoob.com/tags/canvas-shadowcolor.html",target:"_blank",rel:"noopener noreferrer"},_=n("td",{style:{"text-align":"left"}},"设置或返回用于阴影的颜色",-1),x={style:{"text-align":"left"}},y={href:"https://www.runoob.com/tags/canvas-shadowblur.html",target:"_blank",rel:"noopener noreferrer"},w=n("td",{style:{"text-align":"left"}},"设置或返回用于阴影的模糊级别",-1),q={style:{"text-align":"left"}},S={href:"https://www.runoob.com/tags/canvas-shadowoffsetx.html",target:"_blank",rel:"noopener noreferrer"},C=n("td",{style:{"text-align":"left"}},"设置或返回阴影与形状的水平距离",-1),T={style:{"text-align":"left"}},M={href:"https://www.runoob.com/tags/canvas-shadowoffsety.html",target:"_blank",rel:"noopener noreferrer"},L=n("td",{style:{"text-align":"left"}},"设置或返回阴影与形状的垂直距离",-1),R=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"方法"),n("th",{style:{"text-align":"left"}},"描述")])],-1),E={style:{"text-align":"left"}},I={href:"https://www.runoob.com/tags/canvas-createlineargradient.html",target:"_blank",rel:"noopener noreferrer"},P=n("td",{style:{"text-align":"left"}},"创建线性渐变（用在画布内容上）",-1),H={style:{"text-align":"left"}},j={href:"https://www.runoob.com/tags/canvas-createpattern.html",target:"_blank",rel:"noopener noreferrer"},D=n("td",{style:{"text-align":"left"}},"在指定的方向上重复指定的元素",-1),W={style:{"text-align":"left"}},B={href:"https://www.runoob.com/tags/canvas-createradialgradient.html",target:"_blank",rel:"noopener noreferrer"},A=n("td",{style:{"text-align":"left"}},"创建放射状/环形的渐变（用在画布内容上）",-1),G={style:{"text-align":"left"}},N={href:"https://www.runoob.com/tags/canvas-addcolorstop.html",target:"_blank",rel:"noopener noreferrer"},Y=n("td",{style:{"text-align":"left"}},"规定渐变对象中的颜色和停止位置",-1),V=n("h3",{id:"线条样式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#线条样式","aria-hidden":"true"},"#"),s(" 线条样式")],-1),X=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"描述")])],-1),O={style:{"text-align":"left"}},z={href:"https://www.runoob.com/tags/canvas-linecap.html",target:"_blank",rel:"noopener noreferrer"},J=n("td",{style:{"text-align":"left"}},"设置或返回线条的结束端点样式",-1),F={style:{"text-align":"left"}},U={href:"https://www.runoob.com/tags/canvas-linejoin.html",target:"_blank",rel:"noopener noreferrer"},$=n("td",{style:{"text-align":"left"}},"设置或返回两条线相交时，所创建的拐角类型。",-1),K={style:{"text-align":"left"}},Q={href:"https://www.runoob.com/tags/canvas-linewidth.html",target:"_blank",rel:"noopener noreferrer"},Z=n("td",{style:{"text-align":"left"}},"设置或返回当前的线条宽度",-1),nn={style:{"text-align":"left"}},sn={href:"https://www.runoob.com/tags/canvas-miterlimit.html",target:"_blank",rel:"noopener noreferrer"},an=n("td",{style:{"text-align":"left"}},"设置或返回最大斜接长度",-1),tn=n("h3",{id:"矩形",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#矩形","aria-hidden":"true"},"#"),s(" 矩形")],-1),en=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"方法"),n("th",{style:{"text-align":"left"}},"描述")])],-1),on={style:{"text-align":"left"}},pn={href:"https://www.runoob.com/tags/canvas-rect.html",target:"_blank",rel:"noopener noreferrer"},ln=n("td",{style:{"text-align":"left"}},"创建矩形",-1),cn={style:{"text-align":"left"}},rn={href:"https://www.runoob.com/tags/canvas-fillrect.html",target:"_blank",rel:"noopener noreferrer"},un=n("td",{style:{"text-align":"left"}},'绘制"被填充"的矩形',-1),dn={style:{"text-align":"left"}},kn={href:"https://www.runoob.com/tags/canvas-strokerect.html",target:"_blank",rel:"noopener noreferrer"},hn=n("td",{style:{"text-align":"left"}},"绘制矩形（无填充）",-1),mn={style:{"text-align":"left"}},vn={href:"https://www.runoob.com/tags/canvas-clearrect.html",target:"_blank",rel:"noopener noreferrer"},gn=n("td",{style:{"text-align":"left"}},"在给定的矩形内清除指定的像素",-1),bn=n("h3",{id:"路径",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#路径","aria-hidden":"true"},"#"),s(" 路径")],-1),fn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"方法"),n("th",{style:{"text-align":"left"}},"描述")])],-1),_n={style:{"text-align":"left"}},xn={href:"https://www.runoob.com/tags/canvas-fill.html",target:"_blank",rel:"noopener noreferrer"},yn=n("td",{style:{"text-align":"left"}},"填充当前绘图（路径）",-1),wn={style:{"text-align":"left"}},qn={href:"https://www.runoob.com/tags/canvas-stroke.html",target:"_blank",rel:"noopener noreferrer"},Sn=n("td",{style:{"text-align":"left"}},"绘制已定义的路径",-1),Cn={style:{"text-align":"left"}},Tn={href:"https://www.runoob.com/tags/canvas-beginpath.html",target:"_blank",rel:"noopener noreferrer"},Mn=n("td",{style:{"text-align":"left"}},"起始一条路径，或重置当前路径",-1),Ln={style:{"text-align":"left"}},Rn={href:"https://www.runoob.com/tags/canvas-moveto.html",target:"_blank",rel:"noopener noreferrer"},En=n("td",{style:{"text-align":"left"}},"把路径移动到画布中的指定点，不创建线条",-1),In={style:{"text-align":"left"}},Pn={href:"https://www.runoob.com/tags/canvas-closepath.html",target:"_blank",rel:"noopener noreferrer"},Hn=n("td",{style:{"text-align":"left"}},"创建从当前点回到起始点的路径",-1),jn={style:{"text-align":"left"}},Dn={href:"https://www.runoob.com/tags/canvas-lineto.html",target:"_blank",rel:"noopener noreferrer"},Wn=n("td",{style:{"text-align":"left"}},"添加一个新点，然后在画布中创建从该点到最后指定点的线条",-1),Bn={style:{"text-align":"left"}},An={href:"https://www.runoob.com/tags/canvas-clip.html",target:"_blank",rel:"noopener noreferrer"},Gn=n("td",{style:{"text-align":"left"}},"从原始画布剪切任意形状和尺寸的区域",-1),Nn={style:{"text-align":"left"}},Yn={href:"https://www.runoob.com/tags/canvas-quadraticcurveto.html",target:"_blank",rel:"noopener noreferrer"},Vn=n("td",{style:{"text-align":"left"}},"创建二次贝塞尔曲线",-1),Xn={style:{"text-align":"left"}},On={href:"https://www.runoob.com/tags/canvas-beziercurveto.html",target:"_blank",rel:"noopener noreferrer"},zn=n("td",{style:{"text-align":"left"}},"创建三次贝塞尔曲线",-1),Jn={style:{"text-align":"left"}},Fn={href:"https://www.runoob.com/tags/canvas-arc.html",target:"_blank",rel:"noopener noreferrer"},Un=n("td",{style:{"text-align":"left"}},"创建弧/曲线（用于创建圆形或部分圆）",-1),$n={style:{"text-align":"left"}},Kn={href:"https://www.runoob.com/tags/canvas-arcto.html",target:"_blank",rel:"noopener noreferrer"},Qn=n("td",{style:{"text-align":"left"}},"创建两切线之间的弧/曲线",-1),Zn={style:{"text-align":"left"}},ns={href:"https://www.runoob.com/tags/canvas-ispointinpath.html",target:"_blank",rel:"noopener noreferrer"},ss=n("td",{style:{"text-align":"left"}},"如果指定的点位于当前路径中，则返回 true，否则返回 false",-1),as=n("h3",{id:"转换",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#转换","aria-hidden":"true"},"#"),s(" 转换")],-1),ts=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"方法"),n("th",{style:{"text-align":"left"}},"描述")])],-1),es={style:{"text-align":"left"}},os={href:"https://www.runoob.com/tags/canvas-scale.html",target:"_blank",rel:"noopener noreferrer"},ps=n("td",{style:{"text-align":"left"}},"缩放当前绘图至更大或更小",-1),ls={style:{"text-align":"left"}},cs={href:"https://www.runoob.com/tags/canvas-rotate.html",target:"_blank",rel:"noopener noreferrer"},is=n("td",{style:{"text-align":"left"}},"旋转当前绘图",-1),rs={style:{"text-align":"left"}},us={href:"https://www.runoob.com/tags/canvas-translate.html",target:"_blank",rel:"noopener noreferrer"},ds=n("td",{style:{"text-align":"left"}},"重新映射画布上的 (0,0) 位置",-1),ks={style:{"text-align":"left"}},hs={href:"https://www.runoob.com/tags/canvas-transform.html",target:"_blank",rel:"noopener noreferrer"},ms=n("td",{style:{"text-align":"left"}},"替换绘图的当前转换矩阵",-1),vs={style:{"text-align":"left"}},gs={href:"https://www.runoob.com/tags/canvas-settransform.html",target:"_blank",rel:"noopener noreferrer"},bs=n("td",{style:{"text-align":"left"}},"将当前转换重置为单位矩阵。然后运行 transform()",-1),fs=n("h3",{id:"文本",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文本","aria-hidden":"true"},"#"),s(" 文本")],-1),_s=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"描述")])],-1),xs={style:{"text-align":"left"}},ys={href:"https://www.runoob.com/tags/canvas-font.html",target:"_blank",rel:"noopener noreferrer"},ws=n("td",{style:{"text-align":"left"}},"设置或返回文本内容的当前字体属性",-1),qs={style:{"text-align":"left"}},Ss={href:"https://www.runoob.com/tags/canvas-textalign.html",target:"_blank",rel:"noopener noreferrer"},Cs=n("td",{style:{"text-align":"left"}},"设置或返回文本内容的当前对齐方式",-1),Ts={style:{"text-align":"left"}},Ms={href:"https://www.runoob.com/tags/canvas-textbaseline.html",target:"_blank",rel:"noopener noreferrer"},Ls=n("td",{style:{"text-align":"left"}},"设置或返回在绘制文本时使用的当前文本基线",-1),Rs=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"方法"),n("th",{style:{"text-align":"left"}},"描述")])],-1),Es={style:{"text-align":"left"}},Is={href:"https://www.runoob.com/tags/canvas-filltext.html",target:"_blank",rel:"noopener noreferrer"},Ps=n("td",{style:{"text-align":"left"}},'在画布上绘制"被填充的"文本',-1),Hs={style:{"text-align":"left"}},js={href:"https://www.runoob.com/tags/canvas-stroketext.html",target:"_blank",rel:"noopener noreferrer"},Ds=n("td",{style:{"text-align":"left"}},"在画布上绘制文本（无填充）",-1),Ws={style:{"text-align":"left"}},Bs={href:"https://www.runoob.com/tags/canvas-measuretext.html",target:"_blank",rel:"noopener noreferrer"},As=n("td",{style:{"text-align":"left"}},"返回包含指定文本宽度的对象",-1),Gs=n("h3",{id:"图像绘制",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#图像绘制","aria-hidden":"true"},"#"),s(" 图像绘制")],-1),Ns=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"方法"),n("th",{style:{"text-align":"left"}},"描述")])],-1),Ys={style:{"text-align":"left"}},Vs={href:"https://www.runoob.com/tags/canvas-drawimage.html",target:"_blank",rel:"noopener noreferrer"},Xs=n("td",{style:{"text-align":"left"}},"向画布上绘制图像、画布或视频",-1),Os=n("h3",{id:"像素操作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#像素操作","aria-hidden":"true"},"#"),s(" 像素操作")],-1),zs=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"描述")])],-1),Js={style:{"text-align":"left"}},Fs={href:"https://www.runoob.com/tags/canvas-imagedata-width.html",target:"_blank",rel:"noopener noreferrer"},Us=n("td",{style:{"text-align":"left"}},"返回 ImageData 对象的宽度",-1),$s={style:{"text-align":"left"}},Ks={href:"https://www.runoob.com/tags/canvas-imagedata-height.html",target:"_blank",rel:"noopener noreferrer"},Qs=n("td",{style:{"text-align":"left"}},"返回 ImageData 对象的高度",-1),Zs={style:{"text-align":"left"}},na={href:"https://www.runoob.com/tags/canvas-imagedata-data.html",target:"_blank",rel:"noopener noreferrer"},sa=n("td",{style:{"text-align":"left"}},"返回一个对象，其包含指定的 ImageData 对象的图像数据",-1),aa=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"方法"),n("th",{style:{"text-align":"left"}},"描述")])],-1),ta={style:{"text-align":"left"}},ea={href:"https://www.runoob.com/tags/canvas-createimagedata.html",target:"_blank",rel:"noopener noreferrer"},oa=n("td",{style:{"text-align":"left"}},"创建新的、空白的 ImageData 对象",-1),pa={style:{"text-align":"left"}},la={href:"https://www.runoob.com/tags/canvas-getimagedata.html",target:"_blank",rel:"noopener noreferrer"},ca=n("td",{style:{"text-align":"left"}},"返回 ImageData 对象，该对象为画布上指定的矩形复制像素数据",-1),ia={style:{"text-align":"left"}},ra={href:"https://www.runoob.com/tags/canvas-putimagedata.html",target:"_blank",rel:"noopener noreferrer"},ua=n("td",{style:{"text-align":"left"}},"把图像数据（从指定的 ImageData 对象）放回画布上",-1),da=n("h3",{id:"合成",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#合成","aria-hidden":"true"},"#"),s(" 合成")],-1),ka=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性"),n("th",{style:{"text-align":"left"}},"描述")])],-1),ha={style:{"text-align":"left"}},ma={href:"https://www.runoob.com/tags/canvas-globalalpha.html",target:"_blank",rel:"noopener noreferrer"},va=n("td",{style:{"text-align":"left"}},"设置或返回绘图的当前 alpha 或透明值",-1),ga={style:{"text-align":"left"}},ba={href:"https://www.runoob.com/tags/canvas-globalcompositeoperation.html",target:"_blank",rel:"noopener noreferrer"},fa=n("td",{style:{"text-align":"left"}},"设置或返回新图像如何绘制到已有的图像上",-1),_a=e(`<h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">save()</td><td style="text-align:left;">保存当前环境的状态</td></tr><tr><td style="text-align:left;">restore()</td><td style="text-align:left;">返回之前保存过的路径状态和属性</td></tr><tr><td style="text-align:left;">createEvent()</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">getContext()</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">toDataURL()</td><td style="text-align:left;"></td></tr></tbody></table><h2 id="项目模板" tabindex="-1"><a class="header-anchor" href="#项目模板" aria-hidden="true">#</a> 项目模板</h2><p>因为使用到了 Typescript，所以我们使用 vite 创建 typescript 项目，并选择使用 <code>vanilla</code> 模板来开发</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ yarn create vite
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>项目安装执行结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>执行结果
✔ Project name: 
✔ Select a framework: › vanilla
✔ Select a variant: › vanilla-ts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>目录结构</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├── images				 		//图片文件
│   └── p2.jpeg
├── index.html				//项目模板文件
├── package.json			//项目配置文件
├── src
│   ├── main.ts				//项目主文件，我们在这里编码
│   ├── style.css			//公共样式
│   └── vite-env.d.ts	//TS类型声明文件
├── tsconfig.json			//TS配置文件
└── yarn.lock					//扩展包版本锁定文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="矩形绘制" tabindex="-1"><a class="header-anchor" href="#矩形绘制" aria-hidden="true">#</a> 矩形绘制</h2><p>使用 strokeRect 方法绘制边框矩形</p><h3 id="实心矩形-fillrect" tabindex="-1"><a class="header-anchor" href="#实心矩形-fillrect" aria-hidden="true">#</a> 实心矩形 fillRect</h3><p>使用<code>fillRect</code>方法可以绘制实心矩形，下面是 fillRect 方法的参数说明</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">x</td><td style="text-align:left;">矩形左上角的 x 坐标</td></tr><tr><td style="text-align:left;">y</td><td style="text-align:left;">矩形左上角的 y 坐标</td></tr><tr><td style="text-align:left;">width</td><td style="text-align:left;">矩形的宽度，以像素计</td></tr><tr><td style="text-align:left;">height</td><td style="text-align:left;">矩形的高度，以像素计</td></tr></tbody></table><p>纯色填充画布</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;#canvas&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&#39;#16a085&#39;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="空心矩形-strokerect" tabindex="-1"><a class="header-anchor" href="#空心矩形-strokerect" aria-hidden="true">#</a> 空心矩形 strokeRect</h3><p>使用<code>strokeRect</code>方法可以绘制空心矩形</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;#canvas&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span>
<span class="token comment">//画布对象</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//定义填充颜色</span>
ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&#39;#16a085&#39;</span><span class="token punctuation">;</span>
<span class="token comment">//线条宽度</span>
ctx<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">;</span>
<span class="token comment">//边角类型： bevel 斜角  round圆角  miter 尖角</span>
ctx<span class="token punctuation">.</span>lineJoin<span class="token operator">=</span><span class="token string">&quot;round&quot;</span>
<span class="token comment">//绘制矩形边框</span>
ctx<span class="token punctuation">.</span><span class="token function">strokeRect</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="圆形绘制" tabindex="-1"><a class="header-anchor" href="#圆形绘制" aria-hidden="true">#</a> 圆形绘制</h2><h3 id="arc" tabindex="-1"><a class="header-anchor" href="#arc" aria-hidden="true">#</a> arc</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>x</td><td>圆的中心的 x 坐标。</td></tr><tr><td><em>y</em></td><td>圆的中心的 y 坐标。</td></tr><tr><td><em>r</em></td><td>圆的半径。</td></tr><tr><td><em>sAngle</em></td><td>起始角，以弧度计。（弧的圆形的三点钟位置是 0 度）。</td></tr><tr><td><em>eAngle</em></td><td>结束角，以弧度计。</td></tr><tr><td><em>counterclockwise</em></td><td>可选。规定应该逆时针还是顺时针绘图。False = 顺时针，true = 逆时针</td></tr></tbody></table><h3 id="绘制空心圆" tabindex="-1"><a class="header-anchor" href="#绘制空心圆" aria-hidden="true">#</a> 绘制空心圆</h3><p><strong>beginPath() 方法开始一条路径，或重置当前的路径</strong></p><p><strong>stroke()绘制已定义的路径</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;#canvas&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span>
<span class="token comment">//画布对象</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//填充画布颜色</span>
ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span>
ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="绘制实心圆" tabindex="-1"><a class="header-anchor" href="#绘制实心圆" aria-hidden="true">#</a> 绘制实心圆</h3><p><strong>fill() 填充当前绘图（路径）</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;#canvas&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span>
<span class="token comment">//画布对象</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//填充画布颜色</span>
ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>fillStyle<span class="token operator">=</span><span class="token string">&quot;f1c40f&quot;</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="节点绘制" tabindex="-1"><a class="header-anchor" href="#节点绘制" aria-hidden="true">#</a> 节点绘制</h2><ul><li><code>beginPath()</code>重置绘制路径</li><li><code>lineTo()</code>开始绘制线条</li><li><code>moveTo()</code>把路径移动到画布中的指定点，但不会创建线条（<code>lineTo()</code>方法绘制线条）</li><li><code>closePath()</code>闭合线条绘制，即当前点链连接到线条开始绘制点</li><li><code>lineWidth</code>线条宽度</li><li><code>storkeStyle</code>线条的样式，可以是颜色、渐变</li><li><code>stroke()</code>根据上面方法定义的节点绘制处线条</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//填充画布颜色</span>
ctx<span class="token punctuation">.</span>fillStyle<span class="token operator">=</span><span class="token string">&quot;red&quot;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>el<span class="token punctuation">.</span>width<span class="token punctuation">,</span>el<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
<span class="token comment">//开始画线</span>
ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//移动起始点</span>
ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">//下一个节点</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span>
<span class="token comment">//下一个节点</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span>
<span class="token comment">//闭合节点</span>
ctx<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//线宽</span>
ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token comment">//线颜色</span>
ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">&quot;f1c40f&quot;</span>
<span class="token comment">//画线</span>
ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="线性渐变" tabindex="-1"><a class="header-anchor" href="#线性渐变" aria-hidden="true">#</a> 线性渐变</h2><p>使用<code>canvas</code>的<code>createLinearGradient()</code>方法可以创建线性的渐变对象，用于实现线性渐变效果</p><h3 id="createlineargradient" tabindex="-1"><a class="header-anchor" href="#createlineargradient" aria-hidden="true">#</a> createLinearGradient</h3><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>x0</td><td>渐变开始点的<code>X</code>坐标</td></tr><tr><td>y0</td><td>渐变开始点的<code>Y</code>坐标</td></tr><tr><td>x1</td><td>渐变结束点的<code>X</code>坐标</td></tr><tr><td>y1</td><td>渐变结束点的<code>Y</code>坐标</td></tr></tbody></table><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//定义渐变的开始与结束坐标</span>
<span class="token keyword">const</span> gradient <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">createLinearGradient</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//当以渐变位置与颜色，参数一为位置从0~1之间，参数二为即变颜色</span>
gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;#1abc9c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;#9b59b6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;#f1c40f&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//渐变填充</span>
ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> gradient<span class="token punctuation">;</span>
<span class="token comment">//设置线的宽度</span>
ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token comment">//绘制矩形</span>
ctx<span class="token punctuation">.</span><span class="token function">strokeRect</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="渐变填充" tabindex="-1"><a class="header-anchor" href="#渐变填充" aria-hidden="true">#</a> 渐变填充</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//定义渐变的开始与结束坐标</span>
<span class="token keyword">const</span> gradient <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">createLinearGradient</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//定义渐变位置与颜色参数一为从0~1之间，参数二为即变颜色</span>
gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;#1abc9c&#39;</span><span class="token punctuation">)</span>
gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;#9b59b6&#39;</span><span class="token punctuation">)</span>
gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;#f1c40f&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//定义填充颜色</span>
ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> gradient
<span class="token comment">//绘制矩形</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="清空区域" tabindex="-1"><a class="header-anchor" href="#清空区域" aria-hidden="true">#</a> 清空区域</h2><p><strong><code>clearRect</code>在给定的矩形内清除指定的像素</strong></p><p>将红色画布上清除一块区域，清除后的内容是透明的</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;skyblue&quot;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="填充文字" tabindex="-1"><a class="header-anchor" href="#填充文字" aria-hidden="true">#</a> 填充文字</h2><p><strong>使用<code>canvas</code>的 <code>fillText</code>方法绘制填充文字</strong></p><h3 id="filltext" tabindex="-1"><a class="header-anchor" href="#filltext" aria-hidden="true">#</a> fillText</h3><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>text</td><td>规定在画布上输出的文本</td></tr><tr><td>x</td><td>开始绘制文本的<code>X</code>坐标位置（相对于画布）</td></tr><tr><td>y</td><td>开始绘制文本的<code>Y</code>坐标（相对于画布）</td></tr><tr><td>maxWidth</td><td>可选，允许的最大文本宽度，以像素计算</td></tr></tbody></table><h3 id="textbaseline" tabindex="-1"><a class="header-anchor" href="#textbaseline" aria-hidden="true">#</a> textBaseline</h3><p><strong><code>textBaseline</code>用于定义文字基线</strong></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>alphabetic</td><td>默认，文本基线是普通的字母基线</td></tr><tr><td>top</td><td>文本基线是<code>em</code>方框的顶端</td></tr><tr><td>hanging</td><td>文本基线是悬挂基线</td></tr><tr><td>middle</td><td>文本基线是<code>em</code>方框的正中</td></tr><tr><td>ideographic</td><td>文本基线是表意基线</td></tr><tr><td>bottom</td><td>文本基线是<code>em</code>方框的低端</td></tr></tbody></table><h3 id="textalign" tabindex="-1"><a class="header-anchor" href="#textalign" aria-hidden="true">#</a> textAlign</h3><p><strong><code>textAlign</code>用于文本的对齐方式的属性</strong></p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>left</td><td>文本左对齐</td></tr><tr><td>right</td><td>文本右对齐</td></tr><tr><td>center</td><td>文本居中对齐</td></tr><tr><td>start</td><td>文本对齐节点开始的地方（左对齐指本地从左向右，右对齐指本地从右向左）</td></tr><tr><td>end</td><td>文本对齐界线结束的地方 （左对齐指本地从左向右，右对齐指本地从右向左）</td></tr></tbody></table><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//填充样式</span>
ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span>
<span class="token comment">//文字大小与字体设置</span>
ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">&#39;30px CascadiaMono&#39;</span>
<span class="token comment">//定义文字基线</span>
ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">&#39;top&#39;</span>
<span class="token comment">//文字居中</span>
ctx<span class="token punctuation">.</span>textAlign <span class="token operator">=</span> <span class="token string">&#39;left&#39;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="激变文字" tabindex="-1"><a class="header-anchor" href="#激变文字" aria-hidden="true">#</a> 激变文字</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">// 定义渐变的开始与结束坐标</span>
<span class="token keyword">const</span> gradient <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">createLinearGradient</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 定义渐变位置与颜色，参数一为位置是从 0～1 之间，参数二为激变颜色</span>
gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;#1abc9c&#39;</span><span class="token punctuation">)</span>
gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&#39;#9b59b6&#39;</span><span class="token punctuation">)</span>
gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;#f1c40f&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//渐变填充</span>
ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> gradient<span class="token punctuation">;</span>
<span class="token comment">//文字大小与字体设置</span>
ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">&#39;30px CascadiaMono&#39;</span>
ctx<span class="token punctuation">.</span><span class="token function">strokeText</span><span class="token punctuation">(</span><span class="token string">&quot;TYPESCRIPT&quot;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="图片填充" tabindex="-1"><a class="header-anchor" href="#图片填充" aria-hidden="true">#</a> 图片填充</h2><p><strong>createPattern() 在指定的方向上重复指定的元素</strong></p><h3 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明" aria-hidden="true">#</a> 参数说明</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>规定要使用的图片、画布或视频元素</td></tr><tr><td>repeat</td><td>默认，该模式在水平和垂直向重复</td></tr><tr><td>repeat-x</td><td>该模式只在水平方向重复</td></tr><tr><td>repeat-y</td><td>该模式只在垂直方向重复</td></tr><tr><td>no-repeat</td><td>该模式指显示一次（不重复）</td></tr></tbody></table><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//创建图片对象</span>
<span class="token keyword">const</span> img<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//图片加载后处理</span>
img<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token comment">//第二个参数：&quot;repeat|repeat-x|repeat-y|no-repeat&quot;</span>
  <span class="token keyword">const</span> pat <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">createPattern</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">&#39;repeat&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
  <span class="token comment">//指定填充方式为贴图</span>
  ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> pat
  <span class="token comment">//开始填充</span>
  ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="图片缩放" tabindex="-1"><a class="header-anchor" href="#图片缩放" aria-hidden="true">#</a> 图片缩放</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//创建图片对象</span>
<span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;icon.jpeg&#39;</span>
<span class="token comment">//图片加载后处理</span>
img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  el<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth <span class="token operator">*</span> <span class="token function">scale</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> el<span class="token punctuation">)</span>
  el<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight <span class="token operator">*</span> <span class="token function">scale</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> el<span class="token punctuation">)</span>
  <span class="token comment">//绘制图片</span>
  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> el<span class="token punctuation">.</span>width<span class="token punctuation">,</span> el<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//取最小缩放比例</span>
<span class="token keyword">function</span> <span class="token function">scale</span><span class="token punctuation">(</span>img<span class="token operator">:</span> HTMLImageElement<span class="token punctuation">,</span> el<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>width <span class="token operator">/</span> img<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">,</span> el<span class="token punctuation">.</span>height <span class="token operator">/</span> img<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="绘制像素" tabindex="-1"><a class="header-anchor" href="#绘制像素" aria-hidden="true">#</a> 绘制像素</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//创建图片对象</span>
ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>el<span class="token punctuation">.</span>width<span class="token punctuation">,</span>el<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//向画中绘制点</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">1000</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//随机生成坐标</span>
  <span class="token keyword">const</span> x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> el<span class="token punctuation">.</span>width<span class="token punctuation">)</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> el<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
  <span class="token comment">//绘制 5*5 白板</span>
  ctx<span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;#fff&quot;</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">querySelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;canvas&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ctx <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token comment">//创建图片对象</span>
ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;#000&quot;</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>el<span class="token punctuation">.</span>width<span class="token punctuation">,</span>el<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//向画出中绘制点</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>index<span class="token operator">&lt;</span><span class="token number">15</span><span class="token punctuation">;</span>index<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">//随机设置绘制位置</span>
  <span class="token comment">//随机设置圆的半径</span>
  ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> el<span class="token punctuation">.</span>width<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> el<span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span>
  
  <span class="token comment">//随机设置填充颜色</span>
  ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;yellow&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#16a085&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#2ecc71&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#f1c40f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#9b59b6&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,66);function xa(ya,wa){const a=p("ExternalLinkIcon");return l(),c("div",null,[r,n("table",null,[u,n("tbody",null,[n("tr",null,[n("td",d,[n("a",k,[s("fillStyle"),t(a)])]),h]),n("tr",null,[n("td",m,[n("a",v,[s("strokeStyle"),t(a)])]),g]),n("tr",null,[n("td",b,[n("a",f,[s("shadowColor"),t(a)])]),_]),n("tr",null,[n("td",x,[n("a",y,[s("shadowBlur"),t(a)])]),w]),n("tr",null,[n("td",q,[n("a",S,[s("shadowOffsetX"),t(a)])]),C]),n("tr",null,[n("td",T,[n("a",M,[s("shadowOffsetY"),t(a)])]),L])])]),n("table",null,[R,n("tbody",null,[n("tr",null,[n("td",E,[n("a",I,[s("createLinearGradient()"),t(a)])]),P]),n("tr",null,[n("td",H,[n("a",j,[s("createPattern()"),t(a)])]),D]),n("tr",null,[n("td",W,[n("a",B,[s("createRadialGradient()"),t(a)])]),A]),n("tr",null,[n("td",G,[n("a",N,[s("addColorStop()"),t(a)])]),Y])])]),V,n("table",null,[X,n("tbody",null,[n("tr",null,[n("td",O,[n("a",z,[s("lineCap"),t(a)])]),J]),n("tr",null,[n("td",F,[n("a",U,[s("lineJoin"),t(a)])]),$]),n("tr",null,[n("td",K,[n("a",Q,[s("lineWidth"),t(a)])]),Z]),n("tr",null,[n("td",nn,[n("a",sn,[s("miterLimit"),t(a)])]),an])])]),tn,n("table",null,[en,n("tbody",null,[n("tr",null,[n("td",on,[n("a",pn,[s("rect()"),t(a)])]),ln]),n("tr",null,[n("td",cn,[n("a",rn,[s("fillRect()"),t(a)])]),un]),n("tr",null,[n("td",dn,[n("a",kn,[s("strokeRect()"),t(a)])]),hn]),n("tr",null,[n("td",mn,[n("a",vn,[s("clearRect()"),t(a)])]),gn])])]),bn,n("table",null,[fn,n("tbody",null,[n("tr",null,[n("td",_n,[n("a",xn,[s("fill()"),t(a)])]),yn]),n("tr",null,[n("td",wn,[n("a",qn,[s("stroke()"),t(a)])]),Sn]),n("tr",null,[n("td",Cn,[n("a",Tn,[s("beginPath()"),t(a)])]),Mn]),n("tr",null,[n("td",Ln,[n("a",Rn,[s("moveTo()"),t(a)])]),En]),n("tr",null,[n("td",In,[n("a",Pn,[s("closePath()"),t(a)])]),Hn]),n("tr",null,[n("td",jn,[n("a",Dn,[s("lineTo()"),t(a)])]),Wn]),n("tr",null,[n("td",Bn,[n("a",An,[s("clip()"),t(a)])]),Gn]),n("tr",null,[n("td",Nn,[n("a",Yn,[s("quadraticCurveTo()"),t(a)])]),Vn]),n("tr",null,[n("td",Xn,[n("a",On,[s("bezierCurveTo()"),t(a)])]),zn]),n("tr",null,[n("td",Jn,[n("a",Fn,[s("arc()"),t(a)])]),Un]),n("tr",null,[n("td",$n,[n("a",Kn,[s("arcTo()"),t(a)])]),Qn]),n("tr",null,[n("td",Zn,[n("a",ns,[s("isPointInPath()"),t(a)])]),ss])])]),as,n("table",null,[ts,n("tbody",null,[n("tr",null,[n("td",es,[n("a",os,[s("scale()"),t(a)])]),ps]),n("tr",null,[n("td",ls,[n("a",cs,[s("rotate()"),t(a)])]),is]),n("tr",null,[n("td",rs,[n("a",us,[s("translate()"),t(a)])]),ds]),n("tr",null,[n("td",ks,[n("a",hs,[s("transform()"),t(a)])]),ms]),n("tr",null,[n("td",vs,[n("a",gs,[s("setTransform()"),t(a)])]),bs])])]),fs,n("table",null,[_s,n("tbody",null,[n("tr",null,[n("td",xs,[n("a",ys,[s("font"),t(a)])]),ws]),n("tr",null,[n("td",qs,[n("a",Ss,[s("textAlign"),t(a)])]),Cs]),n("tr",null,[n("td",Ts,[n("a",Ms,[s("textBaseline"),t(a)])]),Ls])])]),n("table",null,[Rs,n("tbody",null,[n("tr",null,[n("td",Es,[n("a",Is,[s("fillText()"),t(a)])]),Ps]),n("tr",null,[n("td",Hs,[n("a",js,[s("strokeText()"),t(a)])]),Ds]),n("tr",null,[n("td",Ws,[n("a",Bs,[s("measureText()"),t(a)])]),As])])]),Gs,n("table",null,[Ns,n("tbody",null,[n("tr",null,[n("td",Ys,[n("a",Vs,[s("drawImage()"),t(a)])]),Xs])])]),Os,n("table",null,[zs,n("tbody",null,[n("tr",null,[n("td",Js,[n("a",Fs,[s("width"),t(a)])]),Us]),n("tr",null,[n("td",$s,[n("a",Ks,[s("height"),t(a)])]),Qs]),n("tr",null,[n("td",Zs,[n("a",na,[s("data"),t(a)])]),sa])])]),n("table",null,[aa,n("tbody",null,[n("tr",null,[n("td",ta,[n("a",ea,[s("createImageData()"),t(a)])]),oa]),n("tr",null,[n("td",pa,[n("a",la,[s("getImageData()"),t(a)])]),ca]),n("tr",null,[n("td",ia,[n("a",ra,[s("putImageData()"),t(a)])]),ua])])]),da,n("table",null,[ka,n("tbody",null,[n("tr",null,[n("td",ha,[n("a",ma,[s("globalAlpha"),t(a)])]),va]),n("tr",null,[n("td",ga,[n("a",ba,[s("globalCompositeOperation"),t(a)])]),fa])])]),_a])}const Sa=o(i,[["render",xa],["__file","canvas.html.vue"]]);export{Sa as default};
